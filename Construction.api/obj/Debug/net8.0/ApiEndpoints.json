[
  {
    "ContainingType": "Construction.api.Controllers.AuthController",
    "Method": "LoginAsync",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "Construction.Models.APIModels.request.UserLoginRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.DashboardController",
    "Method": "DashBoardGet",
    "RelativePath": "api/Dashboard/GetDashboardData",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "emailId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.EmployeeController",
    "Method": "AddEmployeeAsync",
    "RelativePath": "api/Employee/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Construction.Models.APIModels.request.EmployeeRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.EmployeeController",
    "Method": "GetAllEmployeesAsync",
    "RelativePath": "api/Employee/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "OrganisationId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.EmployeeController",
    "Method": "EditEmployeeAsync",
    "RelativePath": "api/Employee/edit",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Construction.Models.APIModels.request.EmployeeRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.EmployeeController",
    "Method": "GetAllRolesAsync",
    "RelativePath": "api/Employee/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "organisationId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.EmployeeController",
    "Method": "UpdateUserIsActiveAsync",
    "RelativePath": "api/Employee/update-isactive/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "isActive",
        "Type": "System.Boolean",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.RoleController",
    "Method": "AddRole",
    "RelativePath": "api/Role/add",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Construction.Models.APIModels.request.RoleRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.RoleController",
    "Method": "GetAllRoles",
    "RelativePath": "api/Role/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "organisationId",
        "Type": "System.Guid",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Construction.api.Controllers.UserController",
    "Method": "RegisterOrg",
    "RelativePath": "api/User/registerorg",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orgRequest",
        "Type": "Construction.Models.APIModels.request.OrganisationRequestModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]